{"version":3,"sources":["Components/Card.js","Components/CardArray.js","Components/SearchBar.js","Components/Scroll.js","Containers/App.js","index.js"],"names":["Card","name","id","email","className","alt","src","CardArray","robots","map","user","i","SearchBar","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","useState","setRobots","searchfield","setSearchfield","useEffect","fetch","then","answer","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","event","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAYeA,EAVF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,GAAGC,EAAW,EAAXA,MACtB,OACC,sBAAKC,UAAU,yDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BJ,EAA1B,cACrB,mCAAMD,EAAN,OACA,kCAAKE,EAAL,WCeYI,EAnBG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpB,OACC,8BAECA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACC,cAAC,EAAD,CAECT,GAAIM,EAAOG,GAAGT,GACdD,KAAMO,EAAOG,GAAGV,KAChBE,MAAOK,EAAOG,GAAGR,OAHZK,EAAOG,GAAGT,UCMNU,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACnB,OACC,qBAAKT,UAAW,MAAhB,SACC,uBACAA,UAAY,mCACZU,KAAK,SACLC,YAAY,oBACZC,SAAWH,OCACI,EARA,SAACC,GACf,OACC,qBAAKC,MAAS,CAAEC,UAAW,SAAUC,OAAO,kBAAmBC,OAAO,SAAtE,SACCJ,EAAMK,Y,MC8CMC,MA5Cf,WAcC,MAA4BC,mBAAS,IAArC,mBAAOjB,EAAP,KAAekB,EAAf,KACA,EAAqCD,mBAAS,IAA9C,mBAAOE,EAAP,KAAmBC,EAAnB,KACA,EAA0BH,mBAAS,GAAnC,6BAEAI,qBAAU,WACTC,MAAM,8CACLC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAG,GAAUR,EAAUQ,QACzB,IAEF,IAIMC,EAAiB3B,EAAO4B,QAAO,SAAAC,GACpC,OAAOA,EAAMpC,KAAKqC,cAAcC,SAASZ,EAAYW,kBAGrD,OAAQ9B,EAAOgC,OAGd,sBAAKpC,UAAY,KAAjB,cACC,oBAAIA,UAAW,KAAf,0BACA,cAAC,EAAD,CAAWS,aAbS,SAAC4B,GACtBb,EAAgBa,EAAMC,OAAOC,UAa5B,cAAC,EAAD,UACC,cAAC,EAAD,CAAWnC,OAAQ2B,SANtB,oBAAI/B,UAAU,KAAd,sB,MChCFwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.cbebc0ba.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name,id,email}) => {\r\n\treturn(\r\n\t\t<div className='tc f7 bg-light-green dib br3 ma2 grow pa3 bw2 shadow-5'>\r\n\t\t\t<img alt=\"Robots\" src={`https://robohash.org/${id}?200x200`}/>\r\n\t\t\t<h2> {name} </h2>\r\n\t\t\t<p> {email} </p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;  ","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardArray = ({ robots }) => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\trobots.map((user, i) =>{\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card \r\n\t\t\t\t\t\tkey={robots[i].id} \r\n\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardArray;","\r\nimport React from 'react';\r\n\r\nconst SearchBar = ({searchChange}) => {\r\n\treturn(\r\n\t\t<div className= 'pa2'>\r\n\t\t\t<input\r\n\t\t\tclassName = 'pa3 ba b--green bg-lightest-blue' \r\n\t\t\ttype='search' \r\n\t\t\tplaceholder=\"Search a robot...\" \r\n\t\t\tonChange ={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn(\r\n\t\t<div style = {{ overflowY: 'scroll', border:'5px solid black', height:'800px' }}>\r\n\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Scroll;","import React, { useEffect,useState } from 'react';\r\nimport CardArray from '../Components/CardArray';\r\nimport SearchBar from '../Components/SearchBar';\r\nimport Scroll from '../Components/Scroll';\r\nimport './App.css';\r\n\r\n\r\nfunction App () {\r\n    // constructor(){\r\n    //     super()\r\n    //     this.state = {\r\n    //         robots: [],\r\n    //         searchfield:''\r\n    //     }\r\n    // }\r\n\t// componentDidMount(){\r\n\t// \tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t// \t\t.then(answer => answer.json())\r\n\t// \t\t.then(users => this.setState({ robots: users }));\r\n\t// }\r\n\r\n\tconst [robots, setRobots] = useState([])\r\n\tconst [searchfield,setSearchfield] = useState('')\r\n\tconst [count, setCount] = useState(0)\r\n\r\n\tuseEffect(()=>{\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(answer => answer.json())\r\n\t\t.then(users => {setRobots(users)});\r\n\t},[])\r\n\r\n\tconst onSearchChange = (event) => {\r\n\t\t\tsetSearchfield( event.target.value)\r\n\t}\r\n\r\n\tconst filteredRobots = robots.filter(robot =>{\r\n\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t})\r\n\t\r\n\t\treturn !robots.length ?\r\n\t\t<h1 className='tc'>Loading</h1> :\r\n\t\t(\t\r\n\t\t\t<div className = 'tc'>.\r\n\t\t\t\t<h1 className= 'f1'> Robofriends</h1>\r\n\t\t\t\t<SearchBar searchChange={onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<CardArray robots={filteredRobots}/>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport 'tachyons';\nimport { robots } from './robots'; //put like this if not default\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}